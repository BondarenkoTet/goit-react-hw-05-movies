{"version":3,"file":"static/js/797.c7a3f38a.chunk.js","mappings":"sMAsDA,UA/CmB,WAAO,IAAD,EACvB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAMC,EAAN,KAAoBC,EAApB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE1CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACLJ,IACHK,EAAAA,EAAAA,IAAYL,GACXM,MAAK,SAAAC,GAAI,OAAIX,EAAUW,EAAKA,KAAKC,QAAxB,GAEX,GAAE,CAACR,IASJ,OACE,iCACA,kBAAMS,SATa,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAAEa,MAAOF,EAAEG,OAAO,GAAGC,SACrCT,EAAAA,EAAAA,IAAYL,GACZU,EAAEG,OAAOE,OACR,EAID,WACE,kBACEC,KAAK,UAEP,0CAGDrB,EAAOsB,OAAQ,IACd,wBACGtB,EAAOuB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAACC,KAAMrB,GADpB,UAEA,wBAAKiB,EAAMK,WAHFL,EAAME,GADF,QAYxB,C,+LClDKI,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGAC0BC,EAAAA,EAAAA,IAAA,UAC1BF,EAD0B,yCACeD,IAFzC,cACGI,EADH,yBAIKA,GAJL,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACmBH,EAAAA,EAAAA,IAAA,UACnBF,EADmB,kBACDK,EADC,qBACmBN,IAFtC,cACGO,EADH,yBAIIA,GAJJ,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,uFACgBH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,kBACEK,EADF,6BAC8BN,IAF9C,cACGS,EADH,yBAIIA,GAJJ,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,uFACmBH,EAAAA,EAAAA,IAAA,UACnBF,EADmB,kBACDK,EADC,6BAC2BN,IAF9C,cACGW,EADH,yBAIIA,GAJJ,kEAOA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BO,GAA3B,uFACiBgB,EAAAA,EAAAA,IAAA,UACjBF,EADiB,iCACgBD,EADhB,kBACiCb,IAFlD,cACGO,EADH,yBAIIA,GAJJ,kE","sources":["pages/MoviesPage.jsx","services/search.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport {searchMovie} from \"../services/search\";\nimport {Link, useSearchParams, useLocation} from 'react-router-dom';\n//import { useParams } from 'react-router-dom';\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n\n  const[searchParams, setSearchParams]= useSearchParams();\n  const queryMovie = searchParams.get(\"query\") ?? \"\";\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if(queryMovie) {\n    searchMovie(queryMovie)\n    .then(data => setMovies(data.data.results))\n    }\n  }, [queryMovie]);\n  \n  const handleSubmit = e => {\n    e.preventDefault()\n    setSearchParams({ query: e.target[0].value });\n    searchMovie(queryMovie)\n    e.target.reset()\n    }; \n      \n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n      />\n      <button>Search</button>\n    </form>\n    \n    {movies.length >0 &&(\n      <ul>\n        {movies.map(movie => (\n          <li key = {movie.id}>\n            <Link to={`/movies/${movie.id}`} \n                  state={{from: location}}>\n            <h2>{movie.title}</h2> \n            </Link>\n        </li>\n      ))}\n      </ul>\n    )}\n    </>\n  )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst APY_KEY = \"9726aa8cd88febf75b5d2369f8da550e\";\nconst BASE_URL = \"https://api.themoviedb.org/3\"\n\nexport async function getTrendingMovies() {\n    const trendingMovies = await axios.get(\n    `${BASE_URL}/trending/movie/week?&api_key=${APY_KEY}`\n    );\n    return  trendingMovies;\n} \n\nexport async function getMovieDetails(movieId) {\n    const details = await axios.get(\n    `${BASE_URL}/movie/${movieId}?&api_key=${APY_KEY}`\n    );\n    return details;\n}\nexport async function getCast(movieId) {\n    const cast = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?&api_key=${APY_KEY}`\n    );\n    return cast;\n}\n\nexport async function getReviews(movieId) {\n    const reviews = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?&api_key=${APY_KEY}`\n    );\n    return reviews\n}\n\nexport async function searchMovie(query) {\n    const movie = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${APY_KEY}&query=${query}`\n    );\n    return movie;\n}\n\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryMovie","get","location","useLocation","useEffect","searchMovie","then","data","results","onSubmit","e","preventDefault","query","target","value","reset","type","length","map","movie","to","id","state","from","title","APY_KEY","BASE_URL","getTrendingMovies","axios","trendingMovies","getMovieDetails","movieId","details","getCast","cast","getReviews","reviews"],"sourceRoot":""}